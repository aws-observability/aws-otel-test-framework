/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // lombok
    id "io.freefair.lombok" version "6.4.3.1"
}

repositories {
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation "com.google.guava:guava:31.1-jre"

    implementation "io.grpc:grpc-bom:1.47.0"
    implementation "io.grpc:grpc-api:1.47.0"

    implementation "io.grpc:grpc-netty-shaded:1.50.0"

    implementation platform("io.opentelemetry:opentelemetry-bom:1.18.0")
    implementation "io.opentelemetry:opentelemetry-api"
    implementation "io.opentelemetry:opentelemetry-sdk"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp"

    implementation "io.opentelemetry:opentelemetry-semconv:1.18.0-alpha"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-aws"
    implementation "com.amazonaws:aws-xray-recorder-sdk-core:2.11.2"
    implementation "com.amazonaws:aws-xray-recorder-sdk-aws-sdk:2.11.2"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13.2'

    // Command cli
    implementation 'info.picocli:picocli:4.6.3'
    compileOnly 'info.picocli:picocli-codegen:4.6.3'

    // log
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'

    // local project can't be referenced in Dockerfile
    // the workaround is build fat jar and copy it in Dockerfile for building docker image
    //  implementation files('build/libs/trace-java-client-1.0-all.jar')
    implementation project(":trace-java-client")
}

application {
    // Define the main class for the application.
    mainClassName = 'com.amazon.opentelemetry.load.generator.App'
}
